version: '3.2'
services:
    redis:
        build: ./redis
        image: registry.gitlab.com/vpacyna/iot-platform-slim/redis:microservice
        ports:
            - "6379"
    mqtt-gateway-nodejs:
        build: ./mqtt-gateway-nodejs
        image: registry.gitlab.com/vpacyna/iot-platform-slim/mqtt-gateway-nodejs:microservice
        environment:
            MARIADB: ${SERVICE_PREFIX}mariadb:3306
            KAFKA: ${SERVICE_PREFIX}kafka:9092
            ZOOKEEPER: ${SERVICE_PREFIX}zookeeper:2181
            REDIS: ${SERVICE_PREFIX}redis:6379
        ports:
            - "1883:1883"
    mariadb:
        image: mariadb:10
        volumes:
            - type: bind
              source: /u/iot_data/iotstorage/mariadb
              target: /var/lib/mysql
        ports:
            - "3306"
        environment:
            MYSQL_ROOT_PASSWORD: mP6AMBTSSElsq1oQttZ1
            MYSQL_DATABASE: backend
            MYSQL_USER: backend
            MYSQL_PASSWORD: qmJDiqlAr9Fcu5Rav0XJ
    iotcore:
        build: ./iotcore
        image: registry.gitlab.com/vpacyna/iot-platform-slim/iotcore:microservice
        ports:
            - "3000:3000"
        depends_on:
            - connect
        environment:
            MARIADB: ${SERVICE_PREFIX}mariadb:3306
            KAFKA: ${SERVICE_PREFIX}kafka:9092
            ZOOKEEPER: ${SERVICE_PREFIX}zookeeper:2181
            ELASTICSEARCH: ${SERVICE_PREFIX}elasticsearch:9200
            ELASTICSEARCH_BIN_PORT: "9200"
            ELASTICSEARCH_USER: elastic
            ELASTICSEARCH_PASSWORD: CzJToWAkKYt4R71V7iz
            CONNECT: ${SERVICE_PREFIX}connect:8083
        volumes:
            - type: bind
              source: /u/iot_data/iotstorage/iotcore
              target: /data
    zookeeper:
        image: wurstmeister/zookeeper
        environment:
            ALLOW_ANONYMOUS_LOGIN: "yes"
        ports:
            - "2181"
    kafka:
        image: wurstmeister/kafka:2.12-2.4.1
        ports:
            - "9092"
            - "9094"
        environment:
            KAFKA_BROKER_ID: "1"
            KAFKA_ZOOKEEPER_CONNECT: ${SERVICE_PREFIX}zookeeper:2181
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: INSIDE://${SERVICE_PREFIX}${SERVICE_NAME}:9092,OUTSIDE://10.195.7.79:9094
            KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
            KAFKA_LOG_DIRS: /kafka/kafka-logs-1
        volumes:
            - type: bind
              source: /u/iot_data/iotstorage/kafka
              target: /kafka
        depends_on:
            - zookeeper           
    elasticsearch:
        build: ./elasticsearch
        image: registry.gitlab.com/vpacyna/iot-platform-slim/elasticsearch:microservice
        volumes:
            - type: bind
              source: /u/iot_data/iotstorage/elasticsearch6
              target: /usr/share/elasticsearch/data
        ports:
            - "9200"
            - "9300"
        environment:
            http.host: 0.0.0.0
            network.host: 0.0.0.0
            node.name: elasticsearch
            discovery.type: single-node
            ELASTIC_PASSWORD: CzJToWAkKYt4R71V7izW
            xpack.security.enabled: "true"
            xpack.security.transport.ssl.enabled: "true"
            xpack.security.transport.ssl.keystore.type: PKCS12
            xpack.security.transport.ssl.verification_mode: certificate
            xpack.security.transport.ssl.keystore.path: elastic-certificates.p12
            xpack.security.transport.ssl.truststore.path: elastic-certificates.p12
            xpack.security.transport.ssl.truststore.type: PKCS12
    kibana:
        depends_on:
            - elasticsearch
        image: kibana:6.8.8
        environment:
            ELASTICSEARCH_URL: http://${SERVICE_PREFIX}elasticsearch:9200
            ELASTICSEARCH_HOSTS: http://${SERVICE_PREFIX}elasticsearch:9200
            CONSOLE_ENABLED: "false"
            ELASTICSEARCH_USERNAME: elastic
            ELASTICSEARCH_PASSWORD: CzJToWAkKYt4R71V7izW
        ports:
            - "5602:5601"
    connect:
        image: confluentinc/cp-kafka-connect:5.5.1
        depends_on:
            - zookeeper
            - kafka
            - elasticsearch
        ports:
            - "8083"
        environment:
            CONNECT_BOOTSTRAP_SERVERS: ${SERVICE_PREFIX}kafka:9092
            CONNECT_REST_ADVERTISED_HOST_NAME: ${SERVICE_PREFIX}connect
            CONNECT_REST_PORT: "8083"
            CONNECT_GROUP_ID: compose-connect-group
            CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
            CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
            CONNECT_OFFSET_FLUSH_INTERVAL_MS: "10000"
            CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
            CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
            CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
            CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
            CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
            CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
            CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
            CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
            CONNECT_ZOOKEEPER_CONNECT: ${SERVICE_PREFIX}zookeeper:2181
            CONNECT_PLUGIN_PATH: /usr/share/java
