version: '3.2'
services:
    kafka-manager:
        image: sheepkiller/kafka-manager:latest
        ports:
            - "9100:9000"
        environment:
            ZK_HOSTS: ${SERVICE_PREFIX}zookeeper:2181
            APPLICATION_SECRET: letmein
            KM_ARGS: -Djava.net.preferIPv4Stack=true

    # nodejs-producer:
    #     build: ./nodejs-producer
    #     image: heldic/nodejs-producer
    #     environment:
    #         MQTT_GATEWAY: ${SERVICE_PREFIX}mqtt-gateway-nodejs${EXPOSED_SUFFIX}:1883

    # java-producer-go:
    #     build: ./java-producer
    #     image: heldic/java-producer
    #     environment:
    #         HTTP_GATEWAY: ${SERVICE_PREFIX}http-gateway-go${EXPOSED_SUFFIX}:8084

    # java-producer-nodejs:
    #     build: ./java-producer
    #     image: heldic/java-producer
    #     environment:
    #         HTTP_GATEWAY: ${SERVICE_PREFIX}http-gateway-nodejs${EXPOSED_SUFFIX}:8083

    # python-producer-nodejs:
    #     build: ./python-producer
    #     image: heldic/python-producer
    #     environment:
    #         WS_GATEWAY: ${SERVICE_PREFIX}ws-gateway-nodejs${EXPOSED_SUFFIX}:8765

    # python-producer-go:
    #     build: ./python-producer
    #     image: heldic/python-producer
    #     environment:
    #         WS_GATEWAY: ${SERVICE_PREFIX}ws-gateway-go${EXPOSED_SUFFIX}:8766

    redis:
        build: ./redis
        image: heldic/redis
        ports:
            - "6379"

    mqtt-gateway-nodejs:
        build: ./mqtt-gateway-nodejs
        image: heldic/mqtt-gateway-nodejs
        environment:
            IOTCORE_BACKEND: ${SERVICE_PREFIX}iotcore-backend:50051
            KAFKA: ${SERVICE_PREFIX}kafka:9092
            ZOOKEEPER: ${SERVICE_PREFIX}zookeeper:2181
            REDIS: ${SERVICE_PREFIX}redis:6379
            AUTOSCALING: "200m:1:2:30"
        ports:
            - "1883:1883"

    ws-gateway-nodejs:
        build: ./ws-gateway-nodejs
        image: heldic/ws-gateway-nodejs
        ports:
            - "8765:8765"
        environment:
            IOTCORE_BACKEND: ${SERVICE_PREFIX}iotcore-backend:50051
            KAFKA: ${SERVICE_PREFIX}kafka:9092
            ZOOKEEPER: ${SERVICE_PREFIX}zookeeper:2181
            AUTOSCALING: "200m:1:2:30"

    ws-gateway-go:
        build: ./ws-gateway-go
        image: heldic/ws-gateway-go
        ports:
            - "8766:8766"
        environment:
            IOTCORE_BACKEND: ${SERVICE_PREFIX}iotcore-backend:50051
            KAFKA: ${SERVICE_PREFIX}kafka:9092
            ZOOKEEPER: ${SERVICE_PREFIX}zookeeper:2181

    http-gateway-nodejs:
        build: ./http-gateway-nodejs
        image: heldic/http-gateway-nodejs
        ports:
            - "8083:8083"
        environment:
            IOTCORE_BACKEND: ${SERVICE_PREFIX}iotcore-backend:50051
            KAFKA: ${SERVICE_PREFIX}kafka:9092
            ZOOKEEPER: ${SERVICE_PREFIX}zookeeper:2181
            AUTOSCALING: "200m:1:2:30"

    http-gateway-go:
        build: ./http-gateway-go
        image: heldic/http-gateway-go
        ports:
            - "8084:8084"
        environment:
            IOTCORE_BACKEND: ${SERVICE_PREFIX}iotcore-backend:50051
            KAFKA: ${SERVICE_PREFIX}kafka:9092
            ZOOKEEPER: ${SERVICE_PREFIX}zookeeper:2181

    mariadb:
        image: mariadb:10
        ports:
            - "3306:3306"
        environment:
            MYSQL_ROOT_PASSWORD: mP6AMBTSSElsq1oQttZ1
            MYSQL_DATABASE: backend
            MYSQL_USER: backend
            MYSQL_PASSWORD: qmJDiqlAr9Fcu5Rav0XJ

    iotcore-backend:
        build: ./iotcore-backend
        image: heldic/iotcore-backend
        ports:
            - "3000:3000"
        environment:
            MARIADB: ${SERVICE_PREFIX}mariadb${EXPOSED_SUFFIX}:3306
            KAFKA: ${SERVICE_PREFIX}kafka:9092
            ZOOKEEPER: ${SERVICE_PREFIX}zookeeper:2181
            ELASTICSEARCH: ${SERVICE_PREFIX}elasticsearch:9200
            ELASTICSEARCH_BIN_PORT: "9300"
            FLINK: ${SERVICE_PREFIX}flink${EXPOSED_SUFFIX}:8081

    iotcore-frontend:
        build: ./iotcore-frontend
        image: heldic/iotcore-frontend
        ports:
            - "8080:80"
        environment:
            IOTCORE_BACKEND: ${SERVICE_PREFIX}iotcore-backend${EXPOSED_SUFFIX}:3000

    zookeeper:
        image: wurstmeister/zookeeper:latest
        ports:
            - "2181"

    kafka:
        image: wurstmeister/kafka:latest
        ports:
            - "9092"
            - "9094"
        environment:
            HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
            KAFKA_ZOOKEEPER_CONNECT: ${SERVICE_PREFIX}zookeeper:2181
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: INSIDE://${SERVICE_PREFIX}${SERVICE_NAME}:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
            KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'

    flink:
        image: flink:1.5-alpine
        ports:
            - "8081:8081"
            - "6123"
            - "6124"
            - "6125"
        command: jobmanager
        environment:
            JOB_MANAGER_RPC_ADDRESS: ${SERVICE_PREFIX}flink

    taskmanager:
        image: flink:1.5-alpine
        depends_on:
            - flink
        command: taskmanager
        environment:
            JOB_MANAGER_RPC_ADDRESS: ${SERVICE_PREFIX}flink
            TASK_MANAGER_NUMBER_OF_TASK_SLOTS: "100"

    #flink:
    #    build: ./flink
    #    image: heldic/flink
    #    ports:
    #        - "8081:8081"
    #    environment:
    #        KAFKA: ${SERVICE_PREFIX}kafka:9092
    #        ZOOKEEPER: ${SERVICE_PREFIX}zookeeper:2181
    #        ELASTICSEARCH: ${SERVICE_PREFIX}elasticsearch

    elasticsearch:
        build: ./elasticsearch
        image: heldic/elasticsearch
        ports:
            - "9000:9200"
            - "9200"
            - "9300"

  # grafana:
  #   build: ./grafana
  #   image: grafana
  #   ports:
  #     - "3000:3000"

    kibana:
      depends_on:
        - elasticsearch
      image: kibana:5
      environment:
        ELASTICSEARCH_URL: http://${SERVICE_PREFIX}elasticsearch:9200
      ports:
        - "5601:5601"
