apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "4"
    meta.helm.sh/release-name: iot
    meta.helm.sh/release-namespace: default
  generation: 4
  labels:
    app: kafka
    app.kubernetes.io/managed-by: Helm
    chart: iot-platform-0.1.0
    heritage: Helm
    release: iot
  name: iot-kafka
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: kafka
      release: iot
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: kafka
        release: iot
    spec:
      containers:
        - env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: OUTSIDE://10.156.15.200:9094,INSIDE://iot-kafka:9092
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "false"
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: INSIDE
            - name: KAFKA_LISTENERS
              value: OUTSIDE://:9094,INSIDE://:9092
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            - name: KAFKA_LOG_DIRS
              value: /kafka/kafka-logs-1
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: iot-zookeeper:2181
          image: wurstmeister/kafka:2.12-2.4.1
          imagePullPolicy: Always
          name: kafka
          resources:
            requests:
              cpu: 5m
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /kafka
              name: kafka-persistent-storage
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: gitlab-registry
      initContainers:
        - command:
            - chmod
            - -R
            - "777"
            - /kafka
          image: busybox:1.27.2
          imagePullPolicy: IfNotPresent
          name: init-permission
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /kafka
              name: kafka-persistent-storage
        - command: ["rm", "-f", "/kafka/kafka-logs-1/meta.properties"]
          image: busybox:1.27.2
          imagePullPolicy: IfNotPresent
          name: init-empty-meta-properties
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /kafka
              name: kafka-persistent-storage
        - command:
            - sysctl
            - -w
            - vm.max_map_count=262144
          image: busybox:1.27.2
          imagePullPolicy: IfNotPresent
          name: init-sysctl
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: kafka-persistent-storage
          persistentVolumeClaim:
            claimName: kafka-claim
